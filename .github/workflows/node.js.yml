name: Changelog Generator
on:
  # Trigger workflow when a pull request is created/updated/merged
  pull_request:
    types: [opened,synchronize,closed]
jobs:
  build-test-report-publish-component:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

#       - name: Setup Registry
#         uses: actions/setup-node@v1
#         with:
#           node-version: '14.x'
#           registry-url: 'https://npm.pkg.github.com'
#           # Defaults to the user or organization that owns the workflow file
#           scope: '@manimekalai30'

#       - name: Publish package
#         run:  npm publish
#         env:
#           NODE_AUTH_TOKEN: "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" 


      - name: Check package version
        id: cpv
        uses: PostHog/check-package-version@v2

      - name: Echo output
        run: |
            echo "Committed version: ${{ steps.cpv.outputs.committed-version }}"
            echo "Published version: ${{ steps.cpv.outputs.published-version }}"
            echo "Is new version: ${{ steps.cpv.outputs.is-new-version }}"
          
  # changelog:
  #   name: Chanegelog Generator
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
      
  #     - name: Generate Change logs
  #       uses: bala-raj/pull-request-changelog@master
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         branch:  ${{ github.event.pull_request.base.ref }}
          
  #     - if: ${{ steps.isPublished.outputs.published }} == false 
  #       name: Get Change logs from Comment
  #       uses: peter-evans/find-comment@v1
  #       id: fetchComment
  #       with:
  #         issue-number: ${{ github.event.number }}
  #         comment-author: github-actions[bot]
  #         direction: last
          
  #     - if: ${{ steps.fetchComment.outputs.comment-id }} && github.event_name == 'pull_request' && github.event.pull_request.merged == 'true'
  #       run: echo ${{ github.event.pull_request.base.ref }}
        
#       - run: echo ${{ github.base_ref }}
#       - name: Generate Change logs
#         uses: bala-raj/pull-request-changelog@master
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}
#           branch:  ${{ github.event.pull_request.base.ref }}
#       - name: Find Comment
#         uses: peter-evans/find-comment@v1
#         id: fc
#         with:
#           issue-number: ${{ github.event.number }}
#           comment-author: github-actions[bot]
#           direction: last
        
#       - run: echo ${{ github.event.pull_request.title }}
      
#       - uses: bluwy/substitute-string-action@v1
#         id: sub
#         with:
#           _input-text: '1.0.1-stage'
#           .: '-' # Replace action
#       - run: echo ${{ steps.sub.outputs.result }}
          
          
# #       - run: echo ${{ steps.versionString.outputs.replaced}}
            
# #       - name: Create Release
# #         uses: actions/create-release@v1
# #         env:
# #           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
# #         with:
# #           tag_name: ${{ steps.fc.outputs.comment-id }} # Version Get version from package.json
# #           release_name: ${{ github.event.changes }} # Title
# #           body: | # Changes or features in the corresponding release
# #             ${{ steps.fc.outputs.comment-body }}
# #           draft: false
# #           prerelease: false # This is not a prerelease so set false
